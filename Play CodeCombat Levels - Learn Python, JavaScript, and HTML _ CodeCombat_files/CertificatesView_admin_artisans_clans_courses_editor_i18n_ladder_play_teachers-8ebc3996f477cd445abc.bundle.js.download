(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1375:function(e,t,m){var i,h,o,r,p,s={}.hasOwnProperty,y=[].indexOf||function(e){for(var t=0,i=this.length;t<i;t++)if(t in this&&this[t]===e)return t;return-1};function g(){return g.__super__.constructor.apply(this,arguments)}i=m(25),o=m(46),h=m(284),p=m(6).teamSpells,e.exports=(function(e,t){for(var i in t)s.call(t,i)&&(e[i]=t[i]);function r(){this.constructor=e}r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype}(g,i),g.className="LevelSession",g.schema=m(1508),g.prototype.urlRoot="/db/level.session",g.prototype.initialize=function(){return g.__super__.initialize.call(this),this.on("sync",(i=this,function(e){var t=i.get("state")||{};return null==t.scripts&&(t.scripts={}),i.set("state",t)}));var i},g.prototype.updatePermissions=function(){var r,s=this.get("permissions",!0);return s=function(){for(var e=[],t=0,i=s.length;t<i;t++)"public"!==(r=s[t]).target&&e.push(r);return e}(),this.set("permissions",s)},g.prototype.getSourceFor=function(e){var t,i=this.get("code"),e=e.split("/");return null!=i&&null!=(t=i[e[0]])?t[e[1]]:void 0},g.prototype.readyToRank=function(){var e,t,i,r,s,o,n,a,l;if(!this.get("levelID"))return!1;if(!(e=this.get("code")))return!1;if(!(n=this.get("team")))return!1;if(!(t=this.get("submittedCode")))return!0;for(i=0,r=(l=function(){for(var e=p[n],t=[],i=0,r=e.length;i<r;i++)s=e[i],t.push(s.split("/"));return t}()).length;i<r;i++)if(a=(o=l[i])[0],o=o[1],e[a][o]!==(null!=(a=t[a])?a[o]:void 0))return!0;return!1},g.prototype.isMultiplayer=function(){return null!=this.get("submittedCodeLanguage")&&null!=this.get("team")},g.prototype.completed=function(){var e;return(null!=(e=this.get("state"))?e.complete:void 0)||!1},g.prototype.increaseDifficulty=function(e){var t,i=null!=(t=this.get("state"))?t:{};return i.difficulty=(null!=(t=i.difficulty)?t:0)+1,delete i.lastUnsuccessfulSubmissionTime,this.set("state",i),this.trigger("change-difficulty"),this.save(null,{success:e})},g.prototype.timeUntilResubmit=function(){var e,t=null!=(e=this.get("state"))?e:{};return(e=t.lastUnsuccessfulSubmissionTime)?(864e5<(e=(e=_.isString(e)?new Date(e):e)-new Date+792e5)&&(e=864e5,t.lastUnsuccessfulSubmissionTime=new Date,this.set("state",t)),e):0},g.prototype.recordScores=function(e,t){var i,r,s,o,n,a,l,p,c,u,d;if(e){for(l=null!=(p=(d=this.get("state")).topScores)?p:[],o=[],n=new Date,i=0,r=(c=null!=(p=t.get("scoreTypes"))?p:[]).length;i<r;i++)(u=c[i]).type&&(u=u.type),a=_.find(l,{type:u}),null!=(s=e[u])?(0<=y.call(h.lowerIsBetterScoreTypes,u)&&(s*=-1),null==a||s>a.score?o.push({type:u,date:n,score:s}):o.push(a)):a&&o.push(a);return d.topScores=o,this.set("state",d),e=g.getTopScores({level:t.toJSON(),session:this.toJSON()}),Backbone.Mediator.publish("level:top-scores-updated",{scores:e})}},g.getTopScores=function(e){for(var t,i,r,o,s,n,a=e.level,l=e.session,p=m(267),c=function(){for(var e,t=null!=(e=null!=(e=l.state)?e.topScores:void 0)?e:[],i=[],r=0,s=t.length;r<s;r++)o=t[r],i.push(_.clone(o));return i}(),u=0,d=c.length;u<d;u++)r=(o=c[u]).type,0<=y.call(h.lowerIsBetterScoreTypes,r)&&(o.score*=-1);if(a)for(t=0,i=c.length;t<i;t++)s=c[t],(n=p.thresholdForScore(_.assign(_.pick(s,"score","type"),{level:a})))&&(s.thresholdAchieved=n);return c},g.fakeID="ateacherfakesessionidval",g.prototype.isFake=function(){return this.id===g.fakeID},g.prototype.inLeague=function(e){var t,i,r;if(!this.get("leagues"))return!1;for(t=0,i=(r=this.get("leagues")).length;t<i;t++)if(r[t].leagueID===e)return!0;return!1},g.prototype.updateKeyValueDb=function(e){var t=null!=(t=this.get("keyValueDb"))?t:{};if(null==this.originalKeyValueDb&&(this.originalKeyValueDb=t),_.size(e))return this.set("keyValueDb",e)},g.prototype.saveKeyValueDb=function(){var e,t,i,r,s=null!=(i=this.get("keyValueDb"))?i:{};if(this.originalKeyValueDb&&!this.isFake()){for(e in s)r=s[e],(t=this.originalKeyValueDb[e])&&"string"!=typeof t&&"string"!=typeof r?"number"==typeof t&&"number"==typeof r&&o.levelSessions.incrementKeyValue({sessionID:this.id,key:e,value:r-t}):o.levelSessions.setKeyValue({sessionID:this.id,key:e,value:r});return _.size(s)&&this.set("keyValueDb",s),delete this.originalKeyValueDb}},g.prototype.countOriginalLinesOfCode=function(e){var t,i,r=e.getSampleCode(this.get("team")),r=null!=(r=null!=(e=null!=(e=r[this.get("codeLanguage")])?e:r.html)?e:r.python)?r:"",s=(r=r.replace(this.singleLineCommentOnlyRegex(),"")).split(/\n+/);for(s=_.filter(s),r="ogres"===this.get("team")?"hero-placeholder-1":"hero-placeholder",t=(null!=(r=this.getSourceFor(r+"/plan"))?r:"").replace(this.singleLineCommentOnlyRegex(),"").split(/\n+/),t=_.filter(t),i=0;i<t.length&&i<s.length&&t[i]===s[i];)++i;return r=t.length-i,Math.min(r,1e3)},g.prototype.singleLineCommentOnlyRegex=function(){var e="html"===this.get("codeLanguage")?r.html+"|"+r.css+"|"+r.javascript:r[this.get("codeLanguage")]||"#";return new RegExp("^[ \t]*("+e+").*$","gm")},g),r={javascript:"//",python:"#",coffeescript:"#",lua:"--",java:"//",cpp:"//",html:"\x3c!--",css:"/\\*"}},1378:function(e,t,i){var r,s,o,p,n={}.hasOwnProperty;function a(){return a.__super__.constructor.apply(this,arguments)}r=i(25),o=i(1759),i(267),s=i(117),i(115),p=i(6),e.exports=(function(e,t){for(var i in t)n.call(t,i)&&(e[i]=t[i]);function r(){this.constructor=e}r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype}(a,r),a.className="Campaign",a.schema=o,a.prototype.urlRoot="/db/campaign",a.denormalizedLevelProperties=_.keys(_.omit(o.properties.levels.additionalProperties.properties,["position","rewards","first","nextLevels"])),a.denormalizedCampaignProperties=["name","i18n","slug"],a.prototype.initialize=function(e){return this.forceCourseNumbering=(e=null==e?{}:e).forceCourseNumbering,a.__super__.initialize.apply(this,arguments)},a.getLevels=function(e){e=e.levels;return e=_.sortBy(e,"campaignIndex")},a.prototype.getLevels=function(){return new s(a.getLevels(this.toJSON()))},a.prototype.getNonLadderLevels=function(){var e=new s(_.values(this.get("levels")));return e.reset(e.reject(function(e){return e.isLadder()})),e.comparator="campaignIndex",e.sort(),e},a.getLevelNumberMap=function(e,t){for(var i,r,s,o=[],n=this.getLevels(e),a=0,l=n.length;a<l;a++)(r=n[a]).original&&(s=this.levelIsPractice(r,"course"===e.type||t),i=this.levelIsAssessment(r),o.push({key:r.original,practice:s,assessment:i}));return p.createLevelNumberMap(o)},a.prototype.getLevelNameMap=function(){var t={};return this.getLevels().models.map(function(e){return t[e.get("original")]=p.i18n(e.attributes,"name")}),t},a.prototype.getLevelNumber=function(e,t){return null==this.levelNumberMap&&(this.levelNumberMap=a.getLevelNumberMap(this.attributes)),null!=(e=this.levelNumberMap[e])?e:t},a.levelIsPractice=function(e,t){return t?e.practice:e.practice&&/ [ABCD]$/.test(e.name)},a.prototype.levelIsPractice=function(e){return e.attributes&&(e=e.attributes),a.levelIsPractice(e,"course"===this.get("type")||this.forceCourseNumbering)},a.prototype.levelIsAssessment=function(e){return e.attributes&&(e=e.attributes),a.levelIsAssessment(e)},a.levelIsAssessment=function(e){return e.assessment},a.prototype.updateI18NCoverage=function(){return a.__super__.updateI18NCoverage.call(this,_.omit(this.attributes,"levels"))},a)},1508:function(e,t,i){var r=i(12),s=(r.object({id:r.objectId({links:[{rel:"extra",href:"/db/user/{($)}"}]}),time:{type:"Number"},changes:{type:"Number"}}),r.object({required:["original","majorVersion"],links:[{rel:"db",href:"/db/level/{(original)}/version/{(majorVersion)}"}]},{original:r.objectId({}),majorVersion:{type:"integer",minimum:0}})),i=r.object({title:"Session",description:"A single session for a given level.",default:{codeLanguage:"python",submittedCodeLanguage:"python",playtime:0}});_.extend(i.properties,{browser:{type:"object"},creatorName:{type:"string"},levelName:{type:"string"},levelID:{type:"string"},creator:r.objectId({links:[{rel:"extra",href:"/db/user/{($)}"}]}),created:r.date({title:"Created",readOnly:!0}),changed:r.date({title:"Changed",readOnly:!0}),dateFirstCompleted:{},team:r.shortString(),level:s,heroConfig:r.HeroConfigSchema,state:r.object({},{complete:{type:"boolean"},scripts:r.object({},{ended:{type:"object",additionalProperties:{type:"number"}},currentScript:{type:["null","string"]},currentScriptOffset:{type:"number"}}),selected:{type:["null","string"]},playing:{type:"boolean"},frame:{type:"number"},thangs:{type:"object",additionalProperties:{title:"Thang",type:"object",properties:{methods:{type:"object",additionalProperties:{title:"Thang Method",type:"object",properties:{metrics:{type:"object"},source:{type:"string"}}}}}}},goalStates:{type:"object",description:"Maps Goal ID on a goal state object",additionalProperties:{title:"Goal State",type:"object",properties:{status:{enum:["failure","incomplete","success"]}}}},submissionCount:{description:"How many times the session has been submitted for real-time playback (can affect the random seed).",type:"integer",minimum:0},difficulty:{description:"The highest difficulty level beaten, for use in increasing-difficulty replayable levels.",type:"integer",minimum:0},lastUnsuccessfulSubmissionTime:r.date({description:"The last time that real-time submission was started without resulting in a win."}),flagHistory:{description:"The history of flag events during the last real-time playback submission.",type:"array",items:r.object({required:["player","color","time","active"]},{player:{type:"string"},team:{type:"string"},color:{type:"string",enum:["green","black","violet"]},time:{type:"number",minimum:0},active:{type:"boolean"},pos:r.object({required:["x","y"]},{x:{type:"number"},y:{type:"number"}}),source:{type:"string",enum:["click"]}})},topScores:r.array({},r.object({},{type:r.scoreType,date:r.date({description:"When the submission achieving this score happened."}),score:{type:"number"}}))}),code:{type:"object",additionalProperties:{type:"object",additionalProperties:{type:"string",format:"code",maxLength:131072}}},codeLogs:{type:"array"},codeLanguage:{type:"string"},codeConcepts:{type:"array",items:{type:"string"}},playtime:{type:"number",title:"Playtime",description:"The total playtime on this session in seconds"},hintTime:{type:"number",title:"Hint Time",description:"The total time hints viewed in seconds"},timesCodeRun:{type:"number",title:"Times Code Run",description:"The total times the code has been run"},timesAutocompleteUsed:{type:"number",title:"Times Autocomplete Used",description:"The total times autocomplete was used"},teamSpells:{type:"object",additionalProperties:{type:"array"}},players:{type:"object"},chat:{type:"array"},ladderAchievementDifficulty:{type:"integer",minimum:0,description:"What ogre AI difficulty, 0-4, this human session has beaten in a multiplayer arena."},meanStrength:{type:"number"},standardDeviation:{type:"number",minimum:0},totalScore:{type:"number"},submitted:{type:"boolean"},submitDate:r.date({title:"Submitted"}),submittedCode:{type:"object",additionalProperties:{type:"object",additionalProperties:{type:"string",format:"code"}}},submittedCodeLanguage:{type:"string"},isRanking:{type:"boolean",description:"Whether this session is still in the first ranking chain after being submitted."},randomSimulationIndex:{type:"number",description:"A random updated every time the game is randomly simulated for a uniform random distribution of simulations (see #2448).",minimum:0,maximum:1},unsubscribed:{type:"boolean",description:"Whether the player has opted out of receiving email updates about ladder rankings for this session."},numberOfWinsAndTies:{type:"number"},numberOfLosses:{type:"number"},scoreHistory:{type:"array",title:"Score History",description:"A list of objects representing the score history of a session",items:{title:"Score History Point",description:"An array with the format [unix timestamp, totalScore]",type:"array",items:{type:"number"}}},matches:{type:"array",title:"Matches",description:"All of the matches a submitted session has played in its current state.",items:{type:"object",properties:{date:r.date({title:"Date computed",description:"The date a match was computed."}),playtime:{title:"Playtime so far",description:"The total seconds of playtime on this session when the match was computed. Not currently tracked.",type:"number"},metrics:{type:"object",title:"Metrics",description:"Various information about the outcome of a match.",properties:{rank:{title:"Rank",description:"A 0-indexed ranking representing the player's standing in the outcome of a match",type:"number"}}},opponents:{type:"array",title:"Opponents",description:"An array containing information about the opponents' sessions in a given match.",items:{type:"object",properties:{sessionID:{title:"Opponent Session ID",description:"The session ID of an opponent.",type:["object","string","null"]},userID:{title:"Opponent User ID",description:"The user ID of an opponent",type:["object","string","null"]},name:{title:"Opponent name",description:"The name of the opponent",type:["string","null"]},totalScore:{title:"Opponent total score",description:"The totalScore of a user when the match was computed",type:["number","string","null"]},metrics:{type:"object",properties:{rank:{title:"Opponent Rank",description:"The opponent's ranking in a given match",type:"number"}}},codeLanguage:{type:["string","null"],description:"What submittedCodeLanguage the opponent used during the match"},team:{type:["string","null"],description:"The opponent team in this match"}}}},simulator:{type:"object",description:"Holds info on who simulated the match, and with what tools."},randomSeed:{description:"Stores the random seed that was used during this match."}}}},leagues:r.array({description:"Multiplayer data for the league corresponding to Clans and CourseInstances the player is a part of."},r.object({},{leagueID:{type:"string",description:"The _id of a Clan or CourseInstance the user belongs to."},stats:r.object({description:"Multiplayer match statistics corresponding to this entry in the league."}),lastOpponentSubmitDate:r.date({description:"The submitDate of the last league session we selected to play against (for playing through league opponents in order)."})})),isForClassroom:{type:"boolean",title:"Is For Classroom",description:"The level session was created for a user inside a course"},published:{type:"boolean",title:"Published to Project Gallery",description:"Project was published to the Project Gallery for peer students to see"},keyValueDb:{type:"object",title:"Key Value DB",description:"Simplified key-value database for game-dev levels"},source:r.object({},{id:r.objectId({}),name:{type:"string",title:"Level session source",description:"Source of the level session, if present level session was added from an external source"}}),creatorAge:{type:"number",title:"Creator Age",description:"Age of creator, in years (but with month precision), at time of session creation, or session.submitDate for ladder sessions",minimum:0},codePoints:r.int({title:"CodePoints",minimum:0,description:"CodePoints this user earned for completing this level"}),archived:r.date({description:"Marks this record for automatic online archiving to cold storage by our cloud database."})}),i.properties.leagues.items.properties.stats.properties=_.pick(i.properties,"meanStrength","standardDeviation","totalScore","numberOfWinsAndTies","numberOfLosses","scoreHistory","matches"),r.extendBasicProperties(i,"level.session"),r.extendPermissionsProperties(i,"level.session"),e.exports=i},1759:function(e,t,i){var r,s,o,n,a,l,p,c=i(12),u=i(285),d=c.object({default:{type:"hero"}});for(c.extendNamedProperties(d),_.extend(d.properties,{i18n:{type:"object",title:"i18n",format:"i18n",props:["name","fullName","description"]},fullName:{type:"string",title:"Full Name",description:'Ex.: "Kithgard Dungeon"'},description:{type:"string",format:"string",description:"How long it takes and what players learn."},type:c.shortString({title:"Type",description:"What kind of campaign this is.",enum:["hero","course","hidden","hoc"]}),ambientSound:c.object({},{mp3:{type:"string",format:"sound-file"},ogg:{type:"string",format:"sound-file"}}),backgroundImage:c.array({},{type:"object",additionalProperties:!1,properties:{image:{type:"string",format:"image-file"},width:{type:"number"}}}),backgroundColor:{type:"string"},backgroundColorTransparent:{type:"string"},adjacentCampaigns:{type:"object",format:"campaigns",additionalProperties:{title:"Campaign",type:"object",format:"campaign",properties:{id:{type:"string",format:"hidden"},name:{type:"string",format:"hidden"},description:{type:"string",format:"hidden"},i18n:{type:"object",format:"hidden"},slug:{type:"string",format:"hidden"},position:c.point2d(),rotation:{type:"number",format:"degrees"},color:{type:"string"},showIfUnlocked:{oneOf:[{type:"string",links:[{rel:"db",href:"/db/level/{($)}/version"}],format:"latest-version-original-reference"},{type:"array",items:{type:"string",links:[{rel:"db",href:"/db/level/{($)}/version"}],format:"latest-version-original-reference"}}]}}}},levelsUpdated:c.date(),levels:{type:"object",format:"levels",additionalProperties:{title:"Level",type:"object",format:"level",additionalProperties:!1,properties:{rewards:{format:"rewards",type:"array",items:{type:"object",additionalProperties:!1,properties:{achievement:{type:"string",links:[{rel:"db",href:"/db/achievement/{{$}}"}],format:"achievement"},item:{type:"string",links:[{rel:"db",href:"/db/thang.type/{($)}/version"}],format:"latest-version-original-reference"},hero:{type:"string",links:[{rel:"db",href:"/db/thang.type/{($)}/version"}],format:"latest-version-original-reference"},level:{type:"string",links:[{rel:"db",href:"/db/level/{($)}/version"}],format:"latest-version-original-reference"},type:{enum:["heroes","items","levels"]}}}},position:c.point2d()}}}}),d.denormalizedLevelProperties=["name","description","i18n","requiresSubscription","replayable","type","kind","slug","original","adventurer","assessment","assessmentPlacement","practice","practiceThresholdMinutes","primerLanguage","shareable","adminOnly","disableSpaces","hidesSubmitUntilRun","hidesPlayButton","hidesRunShortcut","hidesHUD","hidesSay","hidesCodeToolbar","hidesRealTimePlayback","backspaceThrottle","lockDefaultCode","moveRightLoopSnippet","realTimeSpeedFactor","autocompleteFontSizePx","requiredGear","restrictedGear","requiredProperties","restrictedProperties","recommendedHealth","maximumHealth","concepts","primaryConcepts","picoCTFProblem","campaign","campaignIndex","scoreTypes"],r=["name","description","i18n","replayable","slug","original","primerLanguage","shareable","concepts","scoreTypes"],s=0,n=(p=d.denormalizedLevelProperties).length;s<n;s++)l=p[s],d.properties.levels.additionalProperties.properties[l]=_.cloneDeep(u.properties[l]);for(o=0,a=r.length;o<a;o++)d.properties.levels.additionalProperties.properties[r[o]].format="hidden";c.extendBasicProperties(d,"campaign"),c.extendTranslationCoverageProperties(d),c.extendPatchableProperties(d),e.exports=d}}]);